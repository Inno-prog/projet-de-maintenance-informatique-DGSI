{
  "realm": "Maintenance-DGSI",
  "displayName": "Maintenance DGSI",
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "clients": [
    {
      "clientId": "maintenance-app",
      "name": "Maintenance Application",
      "description": "Client for Maintenance DGSI Application",
      "enabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "implicitFlowEnabled": false,
      "standardFlowEnabled": true,
      "publicClient": true,
      "protocol": "openid-connect",
      "secret": "",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "redirectUris": [
        "http://localhost:4200/*",
        "http://localhost:4200/login"
      ],
      "webOrigins": [
        "http://localhost:4200"
      ],
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "ADMINISTRATEUR",
        "description": "Administrateur syst√®me",
        "composite": false,
        "clientRole": false,
        "containerId": "Maintenance-DGSI"
      },
      {
        "name": "PRESTATAIRE",
        "description": "Prestataire de services",
        "composite": false,
        "clientRole": false,
        "containerId": "Maintenance-DGSI"
      },
      {
        "name": "AGENT_DGSI",
        "description": "Agent DGSI",
        "composite": false,
        "clientRole": false,
        "containerId": "Maintenance-DGSI"
      }
    ]
  },
  "users": [
    {
      "username": "admin",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Admin",
      "lastName": "System",
      "email": "admin@gmail.com",
      "credentials": [
        {
          "type": "password",
          "value": "admin123",
          "temporary": false
        }
      ],
      "realmRoles": [
        "ADMINISTRATEUR"
      ],
      "groups": []
    },
    {
      "username": "prestataire",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Prestataire",
      "lastName": "Service",
      "email": "presta@gmail.com",
      "credentials": [
        {
          "type": "password",
          "value": "presta123",
          "temporary": false
        }
      ],
      "realmRoles": [
        "PRESTATAIRE"
      ],
      "groups": []
    },
    {
      "username": "agent",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Agent",
      "lastName": "DGSI",
      "email": "agent@gmail.com",
      "credentials": [
        {
          "type": "password",
          "value": "agent123",
          "temporary": false
        }
      ],
      "realmRoles": [
        "AGENT_DGSI"
      ],
      "groups": []
    }
  ],
  "groups": [],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  }
}